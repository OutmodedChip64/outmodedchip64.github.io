{"version":3,"sources":["Home.js","Cubicle.js","PlayerPixel.js","Blog.js","FlynnBot.js","UnknownPage.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Home","className","to","href","React","Component","Cubicle","props","unityContent","UnityContent","this","PlayerPixel","Blog","FlynnBot","messages","state","messageBox","alert","push","Label","onSubmit","createTable","Row","Control","value","type","placeholder","variant","onClick","handleMessage","App","bg","expand","Brand","alt","src","logo","width","height","Toggle","aria-controls","Collapse","id","Link","exact","path","component","UnknownPage","Boolean","window","location","hostname","match","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.721514db.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Home extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Jumbotron className=\"mainJumbo\">\r\n          <div className=\"mainJumboContent\">\r\n            <h1>Welcome to EFweb</h1>\r\n            <br/>\r\n            <h4>Where would you like to go?</h4>\r\n          </div>\r\n        </Jumbotron>\r\n\r\n        <div className=\"main\">\r\n          <Jumbotron className=\"mainJumbos blogBG\">\r\n            <div className=\"mainJumbosCenter\">\r\n              <div className=\"mainJumbosContent\">\r\n                <h1>EFweb Blog</h1>\r\n                <br/>\r\n                <h4>Check out my new blog with my tech tutorials</h4>\r\n                <br/>\r\n                <Link to=\"/blog\"><Button href=\"/playerpixel\">Check it out!</Button></Link>\r\n              </div>\r\n            </div>\r\n          </Jumbotron>\r\n          <Jumbotron className=\"mainJumbos playerpixelBG\">\r\n            <div className=\"mainJumbosCenter\">\r\n              <div className=\"mainJumbosContent\">\r\n                <h1>PlayerPixel Development</h1>\r\n                <br/>\r\n                <h4>Check out the development of a new 2d game by AEI Games here</h4>\r\n                <br/>\r\n                <Link to=\"/playerpixel\"><Button href=\"/playerpixel\">Play now!</Button></Link>\r\n              </div>\r\n            </div>\r\n          </Jumbotron>\r\n          <Jumbotron className=\"mainJumbos cubicleBG\">\r\n            <div className=\"mainJumbosCenter\">\r\n              <div className=\"mainJumbosContent\">\r\n                <h1>Cubicle Trial</h1>\r\n                <br/>\r\n                <h4>Try my 3d platformer Cubicle here</h4>\r\n                <br/>\r\n                <Link to=\"/cubicle\"><Button href=\"/cubicle\">Play now!</Button></Link>\r\n              </div>\r\n            </div>\r\n          </Jumbotron>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport Unity, { UnityContent } from \"react-unity-webgl\";\r\n\r\nclass Cubicle extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.unityContent = new UnityContent(\r\n      \"/cubicle/Build/Cubicle for Web Build.json\",\r\n      \"/cubicle/Build/UnityLoader.js\"\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main\">\r\n        <Unity unityContent={this.unityContent} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cubicle;\r\n","import React from 'react';\r\nimport Unity, { UnityContent } from \"react-unity-webgl\";\r\n\r\nclass PlayerPixel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.unityContent = new UnityContent(\r\n      \"/playerpixel/Build/PlayerPixel for Web Build.json\",\r\n      \"/playerpixel/Build/UnityLoader.js\"\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main\">\r\n        <Unity unityContent={this.unityContent} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PlayerPixel;\r\n","import React from 'react';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nfunction Blog() {\r\n  return (\r\n    <div className=\"main text-center\">\r\n      <br/>\r\n      <br/>\r\n      <h1>Blog down for redesign</h1>\r\n      <br/>\r\n      <Button href=\"/legacy/blog\">Click here to go to the old blog</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Blog;\r\n","import React from 'react';\r\nimport './flynnbot.css';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nclass FlynnBot extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.messages = []\r\n    this.state = {\r\n        messageBox: \"\"\r\n    }\r\n  }\r\n\r\n  handleMessage() {\r\n    alert(\"Handling message\")\r\n    //let { previousMessages } = []\r\n    //if (this.state.messages != null) {\r\n    //  previousMessages = this.state.messages\r\n    //}\r\n    //this.setState({ messages: [previousMessages, <Form.Label>{this.messageBox}</Form.Label>, <br/>] })\r\n    this.messages.push(<Form.Label>{this.messageBox}</Form.Label>)\r\n    this.messages.push(<br/>)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main\">\r\n        <div className=\"flynnbotFrame\">\r\n          <div className=\"flynnbotTitle\">\r\n            <h1 className=\"text-center\">FlynnBot</h1>\r\n          </div>\r\n          <div className=\"flynnbotConversation\">\r\n            <Form onSubmit={this.createTable}>\r\n              <Form.Label>FlynnBot: Hello</Form.Label>\r\n              <br/>\r\n              <Form.Label>You: Oh hey</Form.Label>\r\n              {this.messages}\r\n            </Form>\r\n          </div>\r\n          <div className=\"flynnbotMessage\">\r\n            <Form>\r\n              <Form.Row>\r\n                <Col>\r\n                  <Form.Control value={this.messageBox} className=\"flynnbotTextBox\" type=\"message\" placeholder=\"Enter message\" />\r\n                </Col>\r\n                <Col>\r\n                  <Button className=\"flynnbotSubmit\" variant=\"primary\" onClick={this.handleMessage}>Submit</Button>\r\n                </Col>\r\n              </Form.Row>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FlynnBot;\r\n","import React from 'react';\r\n\r\nfunction Blog() {\r\n  return (\r\n    <div className=\"main text-center\">\r\n      <br/>\r\n      <br/>\r\n      <h1>Looks like that page doesn't exist...</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Blog;\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport { Route, NavLink, Switch } from \"react-router-dom\";\r\nimport Home from './Home';\r\nimport Cubicle from './Cubicle';\r\nimport PlayerPixel from './PlayerPixel';\r\nimport Blog from './Blog';\r\nimport FlynnBot from './FlynnBot';\r\nimport UnknownPage from './UnknownPage';\r\n\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Navbar bg=\"light\" expand=\"lg\" className=\"headerNav\">\r\n        <Navbar.Brand><NavLink to=\"/\" className=\"navBrand\">\r\n          <img\r\n            alt=\"EFweb Logo\"\r\n            src={logo}\r\n            width=\"30\"\r\n            height=\"30\"\r\n            className=\"d-inline-block align-top\"\r\n          />\r\n          {'  EFweb'}</NavLink>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"ml-auto\">\r\n            <Nav.Link><NavLink to=\"/cubicle\" className=\"navLink\">Cubicle Trial</NavLink></Nav.Link>\r\n            <Nav.Link><NavLink to=\"/playerpixel\" className=\"navLink\">PlayerPixel Development</NavLink></Nav.Link>\r\n            <Nav.Link><NavLink to=\"/flynnbot\" className=\"navLink\">FlynnBot</NavLink></Nav.Link>\r\n            <Nav.Link><NavLink to=\"/blog\" className=\"navLink\">Blog</NavLink></Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n\r\n      <div className=\"content\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home}/>\r\n          <Route path=\"/cubicle\" component={Cubicle}/>\r\n          <Route path=\"/playerpixel\" component={PlayerPixel}/>\r\n          <Route path=\"/flynnbot\" component={FlynnBot}/>\r\n          <Route path=\"/blog\" component={Blog}/>\r\n          <Route component={UnknownPage}/>\r\n        </Switch>\r\n      </div>\r\n\r\n      <div className=\"footer text-center\">\r\n        <p className=\"footerText\">Copyright © 2019 All rights reserved. <a className=\"lightBlueLink\" href=\"https://outmodedchip64.github.io\">EFweb</a></p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(<BrowserRouter basename={process.env.PUBLIC_URL}><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.1fa582f8.svg\";"],"sourceRoot":""}